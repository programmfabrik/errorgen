package {{ .Package }}

import (
  "fmt"
  "bytes"
  "text/template"
)

{{ range $err, $def := $.D.Errors }}
// {{ $.Prefix }}{{ $err }}

type {{ $.Prefix }}{{ $err }} struct {
  {{- range $p, $defP := $def.P }}
    {{ $p }} {{ $defP.T }} // {{ $defP.D }}
  {{- end }}
}

func (e {{ $.Prefix }}{{ $err }}) Error() string {
  t, err := template.New("n").Parse({{ $def.Oescaped }})
  if err != nil {
    panic(fmt.Sprintf("Error compiling template: %q", err))
  }
  buf := bytes.Buffer{}
  err = t.Execute(&buf, e)
  if err != nil {
    panic(fmt.Sprintf("Error executing template: %q", err))
  }
  return buf.String()
}

{{ end }}

